<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.whxlover.mapper.UserHistoryMapper" >
  <resultMap id="BaseResultMap" type="cn.whxlover.pojo.UserHistory" >
    <id column="uid" property="uid" jdbcType="INTEGER" />
    <result column="history2" property="history2" jdbcType="INTEGER" />
    <result column="history1" property="history1" jdbcType="INTEGER" />
    <result column="history3" property="history3" jdbcType="INTEGER" />
    <result column="history4" property="history4" jdbcType="INTEGER" />
    <result column="history5" property="history5" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    uid, history2, history1, history3, history4, history5
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.whxlover.pojo.UserHistoryExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_history
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user_history
    where uid = #{uid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user_history
    where uid = #{uid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.whxlover.pojo.UserHistoryExample" >
    delete from user_history
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.whxlover.pojo.UserHistory" >
    insert into user_history (uid, history2, history1, 
      history3, history4, history5
      )
    values (#{uid,jdbcType=INTEGER}, #{history2,jdbcType=INTEGER}, #{history1,jdbcType=INTEGER}, 
      #{history3,jdbcType=INTEGER}, #{history4,jdbcType=INTEGER}, #{history5,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.whxlover.pojo.UserHistory" >
    insert into user_history
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="uid != null" >
        uid,
      </if>
      <if test="history2 != null" >
        history2,
      </if>
      <if test="history1 != null" >
        history1,
      </if>
      <if test="history3 != null" >
        history3,
      </if>
      <if test="history4 != null" >
        history4,
      </if>
      <if test="history5 != null" >
        history5,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="history2 != null" >
        #{history2,jdbcType=INTEGER},
      </if>
      <if test="history1 != null" >
        #{history1,jdbcType=INTEGER},
      </if>
      <if test="history3 != null" >
        #{history3,jdbcType=INTEGER},
      </if>
      <if test="history4 != null" >
        #{history4,jdbcType=INTEGER},
      </if>
      <if test="history5 != null" >
        #{history5,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.whxlover.pojo.UserHistoryExample" resultType="java.lang.Integer" >
    select count(*) from user_history
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user_history
    <set >
      <if test="record.uid != null" >
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.history2 != null" >
        history2 = #{record.history2,jdbcType=INTEGER},
      </if>
      <if test="record.history1 != null" >
        history1 = #{record.history1,jdbcType=INTEGER},
      </if>
      <if test="record.history3 != null" >
        history3 = #{record.history3,jdbcType=INTEGER},
      </if>
      <if test="record.history4 != null" >
        history4 = #{record.history4,jdbcType=INTEGER},
      </if>
      <if test="record.history5 != null" >
        history5 = #{record.history5,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user_history
    set uid = #{record.uid,jdbcType=INTEGER},
      history2 = #{record.history2,jdbcType=INTEGER},
      history1 = #{record.history1,jdbcType=INTEGER},
      history3 = #{record.history3,jdbcType=INTEGER},
      history4 = #{record.history4,jdbcType=INTEGER},
      history5 = #{record.history5,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.whxlover.pojo.UserHistory" >
    update user_history
    <set >
      <if test="history2 != null" >
        history2 = #{history2,jdbcType=INTEGER},
      </if>
      <if test="history1 != null" >
        history1 = #{history1,jdbcType=INTEGER},
      </if>
      <if test="history3 != null" >
        history3 = #{history3,jdbcType=INTEGER},
      </if>
      <if test="history4 != null" >
        history4 = #{history4,jdbcType=INTEGER},
      </if>
      <if test="history5 != null" >
        history5 = #{history5,jdbcType=INTEGER},
      </if>
    </set>
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.whxlover.pojo.UserHistory" >
    update user_history
    set history2 = #{history2,jdbcType=INTEGER},
      history1 = #{history1,jdbcType=INTEGER},
      history3 = #{history3,jdbcType=INTEGER},
      history4 = #{history4,jdbcType=INTEGER},
      history5 = #{history5,jdbcType=INTEGER}
    where uid = #{uid,jdbcType=INTEGER}
  </update>
</mapper>